name: Deploy PROD
on:
  push:
    branches:
      - feature/**
jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        architecture: 'x64'
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest
    - name: Install Serverless Framework
      run: |
        sudo apt-get update
        sudo curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
        sudo apt-get install -y nodejs zip
        sudo npm install -g serverless
        sudo npm install serverless-tag-resources
        sudo npm install --save serverless-python-requirements
        sudo npm install
        sudo npm run build
    - name: Config AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEV_REGION }}
    - name: Upload to S3
      run: |
        aws s3 sync ./build s3://${{ secrets.AWS_PROD_BUCKET }}
        aws cloudfront create-invalidation --distribution-id E3851FUXRWXJZ6 --paths "/*"  
    - name: Serverless AWS authentication
      run: sls config credentials --provider aws --key ${{ secrets.AWS_ACCESS_KEY_ID }} --secret ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Create env file
      run: |
        cat > env.yml << EOF
        ${{ secrets.ENV }}
        EOF
    - name: Deploy Cloud Resources
      run: sls deploy -s prod --region ${{ secrets.AWS_DEV_REGION }}